
<refentry id="{@id}">

 <refnamediv>
  <refname>Reference Guide</refname>
  <refpurpose>this reference describes every API in the HTML_Progress package</refpurpose>
 </refnamediv>

 {@toc}

 <refsect1 id="{@id common-ref}">
  <title>Common Function Reference</title>
  <para>
   <para>
    These common methods allow to manage UI and DM classes component, change
    internal progress meter identifier, speed animation, and many other little tasks.
   </para>
   <itemizedlist>
    <listitem>{@tutorial progress.apiversion.pkg HTML_Progress::apiVersion} </listitem>
    <listitem>{@tutorial progress.display.pkg HTML_Progress::display} </listitem>
    <listitem>{@tutorial progress.hide.pkg HTML_Progress::hide} </listitem>
    <listitem>{@tutorial progress.tohtml.pkg HTML_Progress::toHtml} </listitem>
    <listitem>{@tutorial progress.toarray.pkg HTML_Progress::toArray} </listitem>
    <listitem>{@tutorial progress.sleep.pkg HTML_Progress::sleep} </listitem>
    <listitem>{@tutorial progress.setprogresshandler.pkg HTML_Progress::setProgressHandler} </listitem>
    <listitem>{@tutorial progress.process.pkg HTML_Progress::process} </listitem>
    <listitem>{@tutorial progress.run.pkg HTML_Progress::run} </listitem>
    <listitem>{@tutorial progress.getui.pkg HTML_Progress::getUI} </listitem>
    <listitem>{@tutorial progress.setui.pkg HTML_Progress::setUI} </listitem>
    <listitem>{@tutorial progress.getdm.pkg HTML_Progress::getDM} </listitem>
    <listitem>{@tutorial progress.setdm.pkg HTML_Progress::setDM} </listitem>
    <listitem>{@tutorial progress.getident.pkg HTML_Progress::getIdent} </listitem>
    <listitem>{@tutorial progress.setident.pkg HTML_Progress::setIdent} </listitem>
    <listitem>{@tutorial progress.getanimspeed.pkg HTML_Progress::getAnimSpeed} </listitem>
    <listitem>{@tutorial progress.setanimspeed.pkg HTML_Progress::setAnimSpeed} </listitem>
    <listitem>{@tutorial progress.getstring.pkg HTML_Progress::getString} </listitem>
    <listitem>{@tutorial progress.setstring.pkg HTML_Progress::setString} </listitem>
    <listitem>{@tutorial progress.isstringpainted.pkg HTML_Progress::isStringPainted} </listitem>
    <listitem>{@tutorial progress.setstringpainted.pkg HTML_Progress::setStringPainted} </listitem>
    <listitem>{@tutorial progress.isborderpainted.pkg HTML_Progress::isBorderPainted} </listitem>
    <listitem>{@tutorial progress.setborderpainted.pkg HTML_Progress::setBorderPainted} </listitem>
    <listitem>{@tutorial ui.getscript.pkg HTML_Progress::getScript} </listitem>
    <listitem>{@tutorial ui.getstyle.pkg HTML_Progress::getStyle} </listitem>
    <listitem>{@tutorial progress.setmodel.pkg HTML_Progress::setModel} </listitem>
    <listitem>{@tutorial progress.isindeterminate.pkg HTML_Progress::isIndeterminate} </listitem>
    <listitem>{@tutorial progress.setindeterminate.pkg HTML_Progress::setIndeterminate} </listitem>
   </itemizedlist>
  </para>
 </refsect1>
 <refsect1 id="{@id error-ref}">
  <title>Error Handler Reference</title>
  <para>
   <itemizedlist>
    <listitem>{@tutorial progress.raiseerror.pkg HTML_Progress::raiseError} </listitem>
    <listitem>{@tutorial progress.haserrors.pkg HTML_Progress::hasErrors} </listitem>
    <listitem>{@tutorial progress.geterror.pkg HTML_Progress::getError} </listitem>
   </itemizedlist>
  </para>
 </refsect1>
 
 <refsect1 id="{@id observer-ref}">
  <title>Observer Pattern Reference</title>
  <para>
   <para>
    The <classname>HTML_Progress_Observer</classname> class provides an implementation 
    of the observer pattern.
    In the content of the HTML_Progress package, it provides a mechanism by which you can 
    examine special event as it is happened. This allows the implementation of special behavior.
   </para>
   <itemizedlist>
    <listitem>{@tutorial progress.addlistener.pkg HTML_Progress::addListener} </listitem>
    <listitem>{@tutorial progress.removelistener.pkg HTML_Progress::removeListener} </listitem>
    <listitem>{@tutorial progress.getlisteners.pkg HTML_Progress::getListeners} </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1 id="{@id math-ref}">
  <title>Mathematical Reference</title>
  <para>
   <para>
    Default mathematical model (<classname>HTML_Progress_DM</classname> class) handles 
    a common progress bar with a minimum and initial value sets to 0, a maximum set to 100, 
    and an increment set to 1.
   </para>
   <itemizedlist>
    <listitem>{@tutorial dm.getincrement.pkg HTML_Progress::getIncrement} </listitem>
    <listitem>{@tutorial dm.setincrement.pkg HTML_Progress::setIncrement} </listitem>
    <listitem>{@tutorial dm.getmaximum.pkg HTML_Progress::getMaximum} </listitem>
    <listitem>{@tutorial dm.setmaximum.pkg HTML_Progress::setMaximum} </listitem>
    <listitem>{@tutorial dm.getminimum.pkg HTML_Progress::getMinimum} </listitem>
    <listitem>{@tutorial dm.setminimum.pkg HTML_Progress::setMinimum} </listitem>
    <listitem>{@tutorial dm.getvalue.pkg HTML_Progress::getValue} </listitem>
    <listitem>{@tutorial dm.setvalue.pkg HTML_Progress::setValue} </listitem>
    <listitem>{@tutorial dm.incvalue.pkg HTML_Progress::incValue} </listitem>
    <listitem>{@tutorial dm.getpercentcomplete.pkg HTML_Progress::getPercentComplete} </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1 id="{@id graphic-ref}">
  <title>Graphical Reference</title>
  <para>
   <para>
    The <classname>HTML_Progress_UI</classname> class provides methods for
    html code display and element attributes handling.
    You can overload it with {@link HTML_Progress::setUI} method.
  </para>
   <itemizedlist>
    <listitem>{@tutorial ui.getorientation.pkg HTML_Progress_UI::getOrientation} </listitem>
    <listitem>{@tutorial ui.setorientation.pkg HTML_Progress_UI::setOrientation} </listitem>
    <listitem>{@tutorial ui.getfillway.pkg HTML_Progress_UI::getFillWay} </listitem>
    <listitem>{@tutorial ui.setfillway.pkg HTML_Progress_UI::setFillWay} </listitem>
    <listitem>{@tutorial ui.getcellcount.pkg HTML_Progress_UI::getCellCount} </listitem>
    <listitem>{@tutorial ui.setcellcount.pkg HTML_Progress_UI::setCellCount} </listitem>
    <listitem>{@tutorial ui.getcellattributes.pkg HTML_Progress_UI::getCellAttributes} </listitem>
    <listitem>{@tutorial ui.setcellattributes.pkg HTML_Progress_UI::setCellAttributes} </listitem>
    <listitem>{@tutorial ui.getcellcoordinates.pkg HTML_Progress_UI::getCellCoordinates} </listitem>
    <listitem>{@tutorial ui.setcellcoordinates.pkg HTML_Progress_UI::setCellCoordinates} </listitem>
    <listitem>{@tutorial ui.getborderattributes.pkg HTML_Progress_UI::getBorderAttributes} </listitem>
    <listitem>{@tutorial ui.setborderattributes.pkg HTML_Progress_UI::setBorderAttributes} </listitem>
    <listitem>{@tutorial ui.getstringattributes.pkg HTML_Progress_UI::getStringAttributes} </listitem>
    <listitem>{@tutorial ui.setstringattributes.pkg HTML_Progress_UI::setStringAttributes} </listitem>
    <listitem>{@tutorial ui.getprogressattributes.pkg HTML_Progress_UI::getProgressAttributes} </listitem>
    <listitem>{@tutorial ui.setprogressattributes.pkg HTML_Progress_UI::setProgressAttributes} </listitem>
    <listitem>{@tutorial ui.getscript.pkg HTML_Progress_UI::getScript} </listitem>
    <listitem>{@tutorial ui.setscript.pkg HTML_Progress_UI::setScript} </listitem>
    <listitem>{@tutorial ui.getstyle.pkg HTML_Progress_UI::getStyle} </listitem>
    <listitem>{@tutorial ui.drawcirclesegments.pkg HTML_Progress_UI::drawCircleSegments} </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1 id="{@id model-ref}">
  <title>Data Model</title>
  <para>
   <para>
    The <classname>HTML_Progress_DM</classname> class 
    handles any mathematical issues arising from assigning faulty values.
    You can overload it with {@link HTML_Progress::setDM} method.
   </para>
   <itemizedlist>
    <listitem>{@tutorial dm.getminimum.pkg HTML_Progress_DM::getMinimum} </listitem>
    <listitem>{@tutorial dm.setminimum.pkg HTML_Progress_DM::setMinimum} </listitem>
    <listitem>{@tutorial dm.getmaximum.pkg HTML_Progress_DM::getMaximum} </listitem>
    <listitem>{@tutorial dm.setmaximum.pkg HTML_Progress_DM::setMaximum} </listitem>
    <listitem>{@tutorial dm.getincrement.pkg HTML_Progress_DM::getIncrement} </listitem>
    <listitem>{@tutorial dm.setincrement.pkg HTML_Progress_DM::setIncrement} </listitem>
    <listitem>{@tutorial dm.getvalue.pkg HTML_Progress_DM::getValue} </listitem>
    <listitem>{@tutorial dm.setvalue.pkg HTML_Progress_DM::setValue} </listitem>
    <listitem>{@tutorial dm.incvalue.pkg HTML_Progress_DM::incValue} </listitem>
    <listitem>{@tutorial dm.getpercentcomplete.pkg HTML_Progress_DM::getPercentComplete} </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1 id="{@id constant-ref}">
  <title>Package HTML_Progress Constants</title>
  <para>
   {@tutorial progress.constants.pkg All Contants} defined in and used by HTML_Progress
  </para>
 </refsect1>

 <refsect1 id="{@id monitor-ref}">
  <title>Monitor Functions</title>
  <para>
   <para>
    <classname>HTML_Progress_Monitor</classname> class allows to execute a process 
    while display a progress bar inside a dialog box. 
   </para>
   <itemizedlist>
    <listitem>{@tutorial monitor.notify.pkg HTML_Progress_Monitor::notify} </listitem>
    <listitem>{@tutorial monitor.setprogresshandler.pkg HTML_Progress_Monitor::setProgressHandler} </listitem>
    <listitem>{@tutorial monitor.callprogresshandler.pkg HTML_Progress_Monitor::callProgressHandler} </listitem>
    <listitem>{@tutorial monitor.isstarted.pkg HTML_Progress_Monitor::isStarted} </listitem>
    <listitem>{@tutorial monitor.iscanceled.pkg HTML_Progress_Monitor::isCanceled} </listitem>
    <listitem>{@tutorial monitor.run.pkg HTML_Progress_Monitor::run} </listitem>
    <listitem>{@tutorial monitor.setprogresselement.pkg HTML_Progress_Monitor::setProgressElement} </listitem>
    <listitem>{@tutorial monitor.getprogresselement.pkg HTML_Progress_Monitor::getProgressElement} </listitem>
    <listitem>{@tutorial monitor.getstyle.pkg HTML_Progress_Monitor::getStyle} </listitem>
    <listitem>{@tutorial monitor.getscript.pkg HTML_Progress_Monitor::getScript} </listitem>
    <listitem>{@tutorial monitor.tohtml.pkg HTML_Progress_Monitor::toHtml} </listitem>
    <listitem>{@tutorial monitor.accept.pkg HTML_Progress_Monitor::accept} </listitem>
    <listitem>{@tutorial monitor.setcaption.pkg HTML_Progress_Monitor::setCaption} </listitem>
   </itemizedlist>
  </para>
 </refsect1>

</refentry>
