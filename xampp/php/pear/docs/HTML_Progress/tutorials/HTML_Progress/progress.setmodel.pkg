<?xml version="1.0" encoding="iso-8859-1" ?>
<!-- $Revision: 1.4 $ -->

<refentry id="{@id}">

 <refnamediv>
  <refname><function>HTML_Progress::setModel</function></refname>
  <refpurpose>sets the look-and-feel that renders the progress meter</refpurpose>
 </refnamediv>

 <refsect1 id="{@id synopsis}">
  <title>Synopsis</title>
 <refsynopsisdiv>
  <refsynopsisdivinfo>
   <funcsynopsis>
    <funcsynopsisinfo>
     require_once 'HTML/Progress.php'; 
    </funcsynopsisinfo>
    <funcprototype>
     <funcdef>void <function>HTML_Progress::setModel</function></funcdef>
     <paramdef>string <parameter>$file</parameter></paramdef>
     <paramdef>string <parameter>$type</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
  </refsynopsisdivinfo>
 </refsynopsisdiv>
 </refsect1>

 <refsect1 id="{@id description}">
  <title>Description</title>
  <para>
   This method is used as an easy way to customize
   with only one line of code and a configuration file, the look and feel of a progress meter.
  </para>
 </refsect1>

 <refsect1 id="{@id parameter}">
  <title>Parameter</title>
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <type>string</type>
      <parameter>$file</parameter>
     </term>
     <listitem>
      <para>
       file name of the configuration file that include model properties.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <type>string</type>
      <parameter>$type</parameter>
     </term>
     <listitem>
      <para>
       type of external ressource (phpArray, iniFile, XML ...).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 id="{@id throws}">
  <title>Throws</title>
  <para>
   <table frame="all">
    <title>Possible PEAR_Error values</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>Error level</entry>
       <entry>Error code</entry>
       <entry>Error message</entry>
       <entry>Solution</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>error</entry>
       <entry><constant>HTML_PROGRESS_ERROR_INVALID_INPUT</constant></entry>
       <entry>invalid input, parameter #1 "<parameter>$file</parameter>" was expecting "file exists"</entry>
       <entry>Fixed filename and path if misspell </entry>
      </row>
      <row>
       <entry>error</entry>
       <entry><constant>HTML_PROGRESS_ERROR_INVALID_INPUT</constant></entry>
       <entry>invalid input, parameter #1 "<parameter>$ui</parameter>" was expecting "(a valid Config Container)"</entry>
       <entry>Read the manual of PEAR::Config package </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1>

 <refsect1 id="{@id note}">
  <title>Note</title>
  <simpara>
   ( HTML_Progress >= 1.0, Config >= 0.9 )
  </simpara>
  <para>
   <important>
    This function can not be called statically.
   </important>
  </para>
  <para>
   <tip>
    You can use the same PHP code with different configuration files to present as much skins
    as you want.
   </tip>
  </para>
 </refsect1>

 <refsect1 id="{@id see}">
  <title>See</title>
  <para>
   {@tutorial progress.setanimspeed.pkg},
   {@tutorial progress.setindeterminate.pkg},
   {@tutorial dm.setincrement.pkg},
   {@tutorial ui.setscript.pkg},
   {@tutorial ui.setorientation.pkg},
   {@tutorial ui.setfillway.pkg},
   {@tutorial ui.setcellcount.pkg},
   {@tutorial ui.setcellattributes.pkg},
   {@tutorial progress.setborderpainted.pkg},
   {@tutorial ui.setborderattributes.pkg},
   {@tutorial progress.setstringpainted.pkg},
   {@tutorial ui.setstringattributes.pkg},
   {@tutorial ui.setprogressattributes.pkg}
  </para>
 </refsect1>

 <refsect1 id="{@id example}">
  <title>Example</title>
  <para>
   <simpara>
    Example below (that requires HTML_Progress >= 1.2.0RC3) will produced the most older
    progress bar style.
   </simpara>
   <figure>
    <graphic fileref="../media/screenshots/ancestor.png"></graphic>
   </figure>
   <example>
    {@example setmodel.php}
   </example>
  </para>
 </refsect1>

</refentry>
