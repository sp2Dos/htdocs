a:18:{s:8:"provides";a:29:{s:15:"class;XML_XPath";a:4:{s:4:"type";s:5:"class";s:4:"name";s:9:"XML_XPath";s:7:"extends";s:16:"XML_XPath_common";s:8:"explicit";b:1;}s:24:"function;XML_XPath::load";a:3:{s:4:"type";s:8:"function";s:4:"name";s:15:"XML_XPath::load";s:8:"explicit";b:1;}s:22:"class;XML_XPath_common";a:3:{s:4:"type";s:5:"class";s:4:"name";s:16:"XML_XPath_common";s:8:"explicit";b:1;}s:35:"function;XML_XPath_common::nodeName";a:3:{s:4:"type";s:8:"function";s:4:"name";s:26:"XML_XPath_common::nodeName";s:8:"explicit";b:1;}s:35:"function;XML_XPath_common::nodeType";a:3:{s:4:"type";s:8:"function";s:4:"name";s:26:"XML_XPath_common::nodeType";s:8:"explicit";b:1;}s:37:"function;XML_XPath_common::childNodes";a:3:{s:4:"type";s:8:"function";s:4:"name";s:28:"XML_XPath_common::childNodes";s:8:"explicit";b:1;}s:47:"function;XML_XPath_common::getElementsByTagName";a:3:{s:4:"type";s:8:"function";s:4:"name";s:38:"XML_XPath_common::getElementsByTagName";s:8:"explicit";b:1;}s:42:"function;XML_XPath_common::documentElement";a:3:{s:4:"type";s:8:"function";s:4:"name";s:33:"XML_XPath_common::documentElement";s:8:"explicit";b:1;}s:37:"function;XML_XPath_common::parentNode";a:3:{s:4:"type";s:8:"function";s:4:"name";s:28:"XML_XPath_common::parentNode";s:8:"explicit";b:1;}s:38:"function;XML_XPath_common::nextSibling";a:3:{s:4:"type";s:8:"function";s:4:"name";s:29:"XML_XPath_common::nextSibling";s:8:"explicit";b:1;}s:42:"function;XML_XPath_common::previousSibling";a:3:{s:4:"type";s:8:"function";s:4:"name";s:33:"XML_XPath_common::previousSibling";s:8:"explicit";b:1;}s:37:"function;XML_XPath_common::firstChild";a:3:{s:4:"type";s:8:"function";s:4:"name";s:28:"XML_XPath_common::firstChild";s:8:"explicit";b:1;}s:36:"function;XML_XPath_common::lastChild";a:3:{s:4:"type";s:8:"function";s:4:"name";s:27:"XML_XPath_common::lastChild";s:8:"explicit";b:1;}s:40:"function;XML_XPath_common::hasChildNodes";a:3:{s:4:"type";s:8:"function";s:4:"name";s:31:"XML_XPath_common::hasChildNodes";s:8:"explicit";b:1;}s:40:"function;XML_XPath_common::hasAttributes";a:3:{s:4:"type";s:8:"function";s:4:"name";s:31:"XML_XPath_common::hasAttributes";s:8:"explicit";b:1;}s:39:"function;XML_XPath_common::hasAttribute";a:3:{s:4:"type";s:8:"function";s:4:"name";s:30:"XML_XPath_common::hasAttribute";s:8:"explicit";b:1;}s:40:"function;XML_XPath_common::getAttributes";a:3:{s:4:"type";s:8:"function";s:4:"name";s:31:"XML_XPath_common::getAttributes";s:8:"explicit";b:1;}s:39:"function;XML_XPath_common::getAttribute";a:3:{s:4:"type";s:8:"function";s:4:"name";s:30:"XML_XPath_common::getAttribute";s:8:"explicit";b:1;}s:39:"function;XML_XPath_common::setAttribute";a:3:{s:4:"type";s:8:"function";s:4:"name";s:30:"XML_XPath_common::setAttribute";s:8:"explicit";b:1;}s:42:"function;XML_XPath_common::removeAttribute";a:3:{s:4:"type";s:8:"function";s:4:"name";s:33:"XML_XPath_common::removeAttribute";s:8:"explicit";b:1;}s:40:"function;XML_XPath_common::substringData";a:3:{s:4:"type";s:8:"function";s:4:"name";s:31:"XML_XPath_common::substringData";s:8:"explicit";b:1;}s:23:"function;is_a_php_class";a:3:{s:4:"type";s:8:"function";s:4:"name";s:14:"is_a_php_class";s:8:"explicit";b:1;}s:22:"class;XML_XPath_result";a:4:{s:4:"type";s:5:"class";s:4:"name";s:16:"XML_XPath_result";s:7:"extends";s:16:"XML_XPath_common";s:8:"explicit";b:1;}s:34:"function;XML_XPath_result::getData";a:3:{s:4:"type";s:8:"function";s:4:"name";s:25:"XML_XPath_result::getData";s:8:"explicit";b:1;}s:37:"function;XML_XPath_result::resultType";a:3:{s:4:"type";s:8:"function";s:4:"name";s:28:"XML_XPath_result::resultType";s:8:"explicit";b:1;}s:37:"function;XML_XPath_result::numResults";a:3:{s:4:"type";s:8:"function";s:4:"name";s:28:"XML_XPath_result::numResults";s:8:"explicit";b:1;}s:35:"function;XML_XPath_result::getIndex";a:3:{s:4:"type";s:8:"function";s:4:"name";s:26:"XML_XPath_result::getIndex";s:8:"explicit";b:1;}s:31:"function;XML_XPath_result::sort";a:3:{s:4:"type";s:8:"function";s:4:"name";s:22:"XML_XPath_result::sort";s:8:"explicit";b:1;}s:21:"class;XML_XPath_Error";a:4:{s:4:"type";s:5:"class";s:4:"name";s:15:"XML_XPath_Error";s:7:"extends";s:10:"PEAR_Error";s:8:"explicit";b:1;}}s:8:"filelist";a:5:{s:9:"XPath.php";a:4:{s:4:"role";s:3:"php";s:14:"baseinstalldir";s:3:"XML";s:6:"md5sum";s:32:"6fefc2dde95d1d9b92915c616fcc9ac5";s:12:"installed_as";s:29:"\xampp\php\pear\XML\XPath.php";}s:16:"XPath/common.php";a:4:{s:4:"role";s:3:"php";s:14:"baseinstalldir";s:3:"XML";s:6:"md5sum";s:32:"9e43be12a065bba400163371d6a11091";s:12:"installed_as";s:36:"\xampp\php\pear\XML\XPath\common.php";}s:16:"XPath/result.php";a:4:{s:4:"role";s:3:"php";s:14:"baseinstalldir";s:3:"XML";s:6:"md5sum";s:32:"361a35fc9f0c66bc862a2877ee151d04";s:12:"installed_as";s:36:"\xampp\php\pear\XML\XPath\result.php";}s:15:"XPath/error.php";a:4:{s:4:"role";s:3:"php";s:14:"baseinstalldir";s:3:"XML";s:6:"md5sum";s:32:"b2fbc65ece57c16071ca0ea435853174";s:12:"installed_as";s:35:"\xampp\php\pear\XML\XPath\error.php";}s:26:"docs/XML_XPath_example.php";a:4:{s:4:"role";s:3:"doc";s:14:"baseinstalldir";s:3:"XML";s:6:"md5sum";s:32:"de88063e44c757dddda16fb372545134";s:12:"installed_as";s:57:"\xampp\php\pear\docs\XML_XPath\docs\XML_XPath_example.php";}}s:10:"xsdversion";s:3:"1.0";s:15:"packagerversion";s:5:"1.4.2";s:7:"package";s:9:"XML_XPath";s:7:"summary";s:98:"The PEAR::XML_XPath class provided an XPath/DOM XML manipulation, maneuvering and query interface.";s:11:"description";s:951:"The PEAR::XML_XPath class provided an XPath/DOM XML manipulation, maneuvering and 
query interface.
The class allows for easy manipulation, maneuvering and querying of a domxml tree using
both xpath queries and DOM walk functions.  It uses an internal pointer for all
methods on which the action is performed.  Results from an dom/xpath query are returned
as an XPath_Result object, which contains an internal array of DOM nodes and which extends 
the common DOM class and hence contains all the DOM functions from the main object to run
on each of the elements in the internal array.  This class tries to hold as close as possible       to the DOM Recommendation.  You MUST have the domxml extension to use this class.
The XML_XPath class was inspired by a class maintained by Nigel Swinson called phpxpath.
The phpxpath class does not rely on PHP xmldom functions and is therefore a sibling to
this class: http://sourceforge.net/projects/phpxpath
 
";s:11:"maintainers";a:1:{i:0;a:4:{s:6:"handle";s:6:"dallen";s:4:"name";s:9:"Dan Allen";s:5:"email";s:14:"dallen@php.net";s:4:"role";s:4:"lead";}}s:7:"version";s:5:"1.2.3";s:12:"release_date";s:10:"2005-10-18";s:15:"release_license";s:11:"PHP License";s:13:"release_state";s:6:"stable";s:13:"release_notes";s:104:"There is now a dependency on PHP4 since PHP5 has out-of-the-box for XPath in both DOM and SimpleXML.
  
";s:12:"release_deps";a:3:{i:1;a:3:{s:4:"type";s:3:"php";s:3:"rel";s:2:"ge";s:7:"version";s:5:"4.2.1";}i:2;a:3:{s:4:"type";s:3:"php";s:3:"rel";s:2:"lt";s:7:"version";s:5:"5.0.0";}i:3;a:3:{s:4:"type";s:3:"ext";s:3:"rel";s:3:"has";s:4:"name";s:6:"domxml";}}s:9:"changelog";a:4:{i:0;a:4:{s:7:"version";s:5:"1.2.1";s:12:"release_date";s:10:"2005-10-12";s:13:"release_state";s:5:"devel";s:13:"release_notes";s:173:"* fixed a long standing bug where the get_class() failed due to a case problem, causing all load() operations to fail in newer releases of PHP
* changed state to devel
    
";}i:1;a:4:{s:7:"version";s:3:"1.2";s:12:"release_date";s:10:"2002-06-07";s:13:"release_state";s:4:"beta";s:13:"release_notes";s:1070:"* Very important to note that the DOM step functions do not take an optional xpath query.  The
reason I designed it this way is because the outcome would be too difficult to deal with, since
one of 4 different scenarios could take place.  Plus, it just doesn't make any sense. 
* Significant speed enhancements (almost 100% faster)
Major changes:
* getAttribute('foo', true) now puts you on the attribute, not the element node
* cleaned up the XML_XPath_result initialization (no longer create an StdClass when calling class)
* fixed sorting for childNodes() and getElementsByTagName() generated result objects
* cleaned up sorting in result object, and added comments (so I don't forget again how I did it)
* major speed enhancements (calling user defined functions methods is slow, so tried to trim that down)
* don't create a result object in the _quick_evaluate function since we don't need it anyway
* enabled relative xpath queries differently, in_xpathQuery = array(query, node) for relative...
* added relative xpath queries for the _quick_evaluate feature
    
";}i:2;a:4:{s:7:"version";s:3:"1.1";s:12:"release_date";s:10:"2002-06-06";s:13:"release_state";s:4:"beta";s:13:"release_notes";s:717:"This version brings major enhancements to the API
* childNode(), siblingNode() removed and features are relocated
* added childNodes() which returns an XML_XPath_result object of all children
* added getElementByTagName which returns an XML_XPath_result object of all matching tags
* step functions in result object are now next(), end(), rewind() and nextByNode(Name|Type)
* calling next() after rewind() in the result object counts the first object again, so a regular
  while loop can be used
* relative XPath queries are now enabled (getNodePath() provides this functionality) 
* better error reports generated and will continue to improve with the domxml extension
* setNodeIndex() in result object removed
    
";}i:3;a:4:{s:7:"version";s:3:"1.0";s:12:"release_date";s:10:"2002-05-23";s:13:"release_state";s:4:"beta";s:13:"release_notes";s:51:"This is the initial independent PEAR release.
    
";}}s:12:"_lastversion";N;s:7:"dirtree";a:3:{s:19:"\xampp\php\pear\XML";b:1;s:25:"\xampp\php\pear\XML\XPath";b:1;s:35:"\xampp\php\pear\docs\XML_XPath\docs";b:1;}s:13:"_lastmodified";i:1133556114;}